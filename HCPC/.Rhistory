font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_scree.png", sep="")))
# #scatter plot cities pca
# fviz_pca_ind(res.pca,
#              #col.ind = "cos2", # Color by the quality of representation
#              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
#              repel = TRUE,     # Avoid text overlapping,
#              main = paste(month, "Additional Locations Scatter Plot", sep=" ")
# )
# ggsave(file.path('graphs', filename=paste(month, "_new_scatter.png", sep="")))
#calculate the best number of clusters by ward linkage
number.cluster <- NbClust(res.pca$x, distance = "euclidean", min.nc = 1, max.nc = 10, method = "ward.D", index = "ch")
best.cluster <- as.numeric(number.cluster$Best.nc[1])
# Compute hierarchical clustering and cut into n clusters
res.hcut <- hcut(res.pca$x, k = best.cluster)
# Visualize
dend_new= fviz_dend(res.hcut,
cex = 0.7,                     # Label size
palette = "jco",               # Color palette see ?ggpubr::ggpar
rect = TRUE, rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8,      # Augment the room for labels
main = paste(month, "Additional Locations Dendrogram", sep=" ")
)
ggpar(dend_new,
font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_dend.png", sep="")))
#create matrix of cluster id for each location
clust_id= res.hcut$cluster
assign(paste0(month, "_clustID"), clust_id)
#fviz_pca_biplot(res.pca, repel = TRUE)
#compute PAM clustering and visualise
res.pam <- pam(res.pca$x,
best.cluster,
diss=FALSE,
stand=FALSE)
#create matrix of cluster id for each location
clust_id= res.pam$clustering
assign(paste0(month, "_clustID_pam"), clust_id)
clust_new=fviz_cluster(res.pam,
stand= FALSE,
data = data,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",         # Color palette see ?ggpubr::ggpar
ggtheme = theme_minimal(),
main = paste(month, "PAM Clustering Including Additional Locations", sep=" ")
)
ggpar(clust_new,
font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_cluster.png", sep="")))
# fviz_pca_var(res.pca,
#              repel = TRUE,            # Avoid label overlapping
#              show.clust.cent = TRUE, # Show cluster centers
#              palette = "jco",         # Color palette see ?ggpubr::ggpar
#              ggtheme = theme_minimal(),
#              title = paste(month, "Additional Locations Variable Direction", sep=" ")
# )
# ggsave(file.path('graphs', filename=paste(month, "_new_var_direction.pdf", sep="")))
#
pc1= fviz_contrib(res.pca,
choice = "var",
axes = 1,
top = 10,
palette = "jco",
axis.text= 12,
title= NULL,
ggtheme = theme_minimal(),
)
ggpar(pc1,
font.main = 0,
font.y = c(20, "red"),
font.tickslab = c(20, "bold", "red"))
ggsave(file.path('./graphs/', filename=paste(month, "_new_pc1.png", sep="")))
pc2= fviz_contrib(res.pca,
choice = "var",
axes = 2,
top = 10,
palette = "jco",
title= NULL,
ggtheme = theme_minimal(),
)
ggpar(pc2,
font.main = 0,
font.y = c(20, "red"),
font.tickslab = c(20, "bold", "red"))
ggsave(file.path('./graphs/', filename=paste(month, "_new_pc2.png", sep="")))
#
# head(res.hcpc$data.clust, 10)
# res.hcpc$desc.var$quanti
# var_importance= res.hcpc$desc.var$quanti
# capture.output(res.hcpc$desc.var$quanti, file = "Var_importance jul.txt")
#
# vi_df = ldply (var_importance, data.frame)
# vi_df=subset(vi_df, select=c(".id", "Mean.in.category", "Overall.mean", "p.value"))
# vi_df=rename(vi_df, c(".id"="Cluster", "Mean.in.category"="Mean In Cluster", "Overall.mean" = "Overall Mean", "p.value"= "p Value"))
# vi_df =vi_df %>% mutate_at(vars("Mean In Cluster", "Overall Mean", "p Value"), funs(round(., 2)))
#
# data.frame(matrix(unlist(var_importance), nrow=length(var_importance), byrow=T))
# res.hcpc$desc.axes$quanti
# capture.output(res.hcpc$desc.axes$quanti, file = "dim_importance jan.txt")
}
for (i in 1:length(files)) {
#to enable naming of plots with month
filename=files[i]
month= substr(files[i], start = 8, 10)
print(month)
savefile= substr(files[i], start = 8, stop = nchar(files[i]))
print(savefile)
data= read.csv("./data/Nov_lowest_cities.csv")
#format data set
data= read.csv(files[i])
location= data$city
rownames(data) = location
data = data[2:7]
rownames(data) = location
cols=c("T", "FOW", "NaCl", "P", "UVR", "TOW")
colnames(data)=cols
#pca on data
res.pca = prcomp(data, retx=TRUE, center=TRUE, scale=FALSE)
#% explained variance of each component
expl.var <- round(res.pca$sdev^2/sum(res.pca$sdev^2)*100)
#visualise explained variance
scree= fviz_screeplot(res.pca,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",         # Color palette see ?ggpubr::ggpar
ggtheme = theme_minimal(),
mian = paste(month, "Additional Locations Scree Plot", sep=" ")
)
ggpar(scree,
font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_scree.png", sep="")))
# #scatter plot cities pca
# fviz_pca_ind(res.pca,
#              #col.ind = "cos2", # Color by the quality of representation
#              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
#              repel = TRUE,     # Avoid text overlapping,
#              main = paste(month, "Additional Locations Scatter Plot", sep=" ")
# )
# ggsave(file.path('graphs', filename=paste(month, "_new_scatter.png", sep="")))
#calculate the best number of clusters by ward linkage
number.cluster <- NbClust(res.pca$x, distance = "euclidean", min.nc = 1, max.nc = 10, method = "ward.D", index = "ch")
best.cluster <- as.numeric(number.cluster$Best.nc[1])
# Compute hierarchical clustering and cut into n clusters
res.hcut <- hcut(res.pca$x, k = best.cluster)
# Visualize
dend_new= fviz_dend(res.hcut,
cex = 0.7,                     # Label size
palette = "jco",               # Color palette see ?ggpubr::ggpar
rect = TRUE, rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8,      # Augment the room for labels
main = paste(month, "Additional Locations Dendrogram", sep=" ")
)
ggpar(dend_new,
font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_dend.png", sep="")))
#create matrix of cluster id for each location
clust_id= res.hcut$cluster
assign(paste0(month, "_clustID"), clust_id)
#fviz_pca_biplot(res.pca, repel = TRUE)
#compute PAM clustering and visualise
res.pam <- pam(res.pca$x,
best.cluster,
diss=FALSE,
stand=FALSE)
#create matrix of cluster id for each location
clust_id= res.pam$clustering
assign(paste0(month, "_clustID_pam"), clust_id)
clust_new=fviz_cluster(res.pam,
stand= FALSE,
data = data,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",         # Color palette see ?ggpubr::ggpar
ggtheme = theme_minimal(),
main = paste(month, "PAM Clustering Including Additional Locations", sep=" ")
)
ggpar(clust_new,
font.main = 0,
font.x = c(14, "red"),
font.y = c(14, "red"),
font.tickslab = c(14, "bold", "red"))
ggsave(file.path('graphs', filename=paste(month, "_new_cluster.png", sep="")))
# fviz_pca_var(res.pca,
#              repel = TRUE,            # Avoid label overlapping
#              show.clust.cent = TRUE, # Show cluster centers
#              palette = "jco",         # Color palette see ?ggpubr::ggpar
#              ggtheme = theme_minimal(),
#              title = paste(month, "Additional Locations Variable Direction", sep=" ")
# )
# ggsave(file.path('graphs', filename=paste(month, "_new_var_direction.pdf", sep="")))
#
pc1= fviz_contrib(res.pca,
choice = "var",
axes = 1,
top = 10,
palette = "jco",
axis.text= 12,
title= NULL,
ggtheme = theme_minimal(),
)
ggpar(pc1,
font.main = 0,
font.y = c(20, "red"),
font.tickslab = c(20, "bold", "red"))
ggsave(file.path('./graphs/', filename=paste(month, "_new_pc1.png", sep="")))
pc2= fviz_contrib(res.pca,
choice = "var",
axes = 2,
top = 10,
palette = "jco",
title= NULL,
ggtheme = theme_minimal(),
)
ggpar(pc2,
font.main = 0,
font.y = c(20, "red"),
font.tickslab = c(20, "bold", "red"))
ggsave(file.path('./graphs/', filename=paste(month, "_new_pc2.png", sep="")))
#
# head(res.hcpc$data.clust, 10)
# res.hcpc$desc.var$quanti
# var_importance= res.hcpc$desc.var$quanti
# capture.output(res.hcpc$desc.var$quanti, file = "Var_importance jul.txt")
#
# vi_df = ldply (var_importance, data.frame)
# vi_df=subset(vi_df, select=c(".id", "Mean.in.category", "Overall.mean", "p.value"))
# vi_df=rename(vi_df, c(".id"="Cluster", "Mean.in.category"="Mean In Cluster", "Overall.mean" = "Overall Mean", "p.value"= "p Value"))
# vi_df =vi_df %>% mutate_at(vars("Mean In Cluster", "Overall Mean", "p Value"), funs(round(., 2)))
#
# data.frame(matrix(unlist(var_importance), nrow=length(var_importance), byrow=T))
# res.hcpc$desc.axes$quanti
# capture.output(res.hcpc$desc.axes$quanti, file = "dim_importance jan.txt")
}
View(lowest_df)
View(Lima_df_new)
radarchart(data.frame(t(Lima_df_new)), pfcol="darkorange1", vlcex = 1.75)
View(ffp_df)
radarchart(data.frame(t(Plymouth_df)) , pfcol="darkorchid3", vlcex = 1.75)
View(Plymouth_df)
t(Lima_df_new)
radarchart(data.frame(t(Lima_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Kinshasa_df_new)), pfcol="darkorange1", vlcex = 1.75)
View(Karachi_df_new)
View(Kinshasa_df_new)
View(lowest_df)
#lowest similarities cities data
lowest_df= read.csv("./data/lowest_sim_variable_means.csv")
lowest_city= lowest_df$city
lowest_df=apply(lowest_df[2:7],2, function(x) (x/mean(x)*100))
lowest_df=data.frame(lowest_df)
lowest_df=cbind(City=lowest_city, lowest_df)
colnames(lowest_df)= columns
mins_new= c(2.2,57,86,2.5,5.5,6.3)
maxs_new=c(242.1,	132,	112,195.8,	294.1,	182.1)
lowest_df2= lowest_df[2:7]
rownames(lowest_df2)= lowest_city
for(i in 1:nrow(lowest_df)){
city= lowest_df[i,1]
df=data.frame(mins=mins_new,
maxs=maxs_new,
actual= t(lowest_df2[i,]))
assign(paste(city, "df_new", sep="_"), df)
}
radarchart(data.frame(t(Lima_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Kinshasa_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Jakarta_df_new)), pfcol="darkorange1", vlcex = 1.75)
View(Kinshasa_df_new)
radarchart(data.frame(t(Kinshasa_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Jakarta_df_new)), pfcol="darkorange1", vlcex = 1.75)
View(Jakarta_df_new)
radarchart(data.frame(t(Kinshasa_df_new)), axis=1, pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Kinshasa_df_new)), axistype=1, pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Kinshasa_df_new)), axistype=2, pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Plymouth_df)) , axistype = 2, pfcol="darkorchid3", vlcex = 1.75)
#only show 2 d.p.
options(digits=2)
#ffp location data
ffp_df= read.csv("./data/ffp_variable_means.csv")
city= ffp_df$city
ffp_df= apply(ffp_df[2:7],2, function(x)(x/mean(x)*100))
ffp_df= data.frame(ffp_df)
ffp_df=cbind(City=city, ffp_df)
columns= c("city","TOW", "UVR", "T", "P", "NaCl", "FOW")# "City")
colnames(ffp_df)= columns
mins= c(186,	135,	112,	177.2,	245,	153)
maxs=c(8.7,	62,	88,	8,	19,	18)
ffp_df2= ffp_df[2:7]
rownames(ffp_df2)= city
for(i in 1:nrow(ffp_df)){
city= ffp_df[i,1]
df=data.frame(mins=mins,
maxs=maxs,
actual= t(ffp_df2[i,]))
assign(paste(city, "df", sep="_"), df)
}
radarchart(data.frame(t(Plymouth_df)) , axistype = 2, pfcol="darkorchid3", vlcex = 1.75)
mins_new= c(2.2,57,86,2.5,5.5,6.3)
maxs_new=c(242.1,	132,	112,195.8,	294.1,	182.1)
lowest_df2= lowest_df[2:7]
rownames(lowest_df2)= lowest_city
for(i in 1:nrow(lowest_df)){
city= lowest_df[i,1]
df=data.frame(mins=mins_new,
maxs=maxs_new,
actual= t(lowest_df2[i,]))
assign(paste(city, "df_new", sep="_"), df)
}
radarchart(data.frame(t(Kinshasa_df_new)), axistype=2, pfcol="darkorange1", vlcex = 1.75)
t(Kinshasa_df_new)
t(Plymouth_df)
mins_new= c(242.1,	132,	112,195.8,	294.1,	182.1)
maxs_new=c(2.2,57,86,2.5,5.5,6.3)
lowest_df2= lowest_df[2:7]
rownames(lowest_df2)= lowest_city
for(i in 1:nrow(lowest_df)){
city= lowest_df[i,1]
df=data.frame(mins=mins_new,
maxs=maxs_new,
actual= t(lowest_df2[i,]))
assign(paste(city, "df_new", sep="_"), df)
}
radarchart(data.frame(t(Kinshasa_df_new)), axistype=2, pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Lima_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Jakarta_df_new)), pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Kinshasa_df_new)), axistype=2, pfcol="darkorange1", vlcex = 1.75)
radarchart(data.frame(t(Jakarta_df_new)), pfcol="darkorange1", vlcex = 1.75)
#only show 2 d.p.
options(digits=2)
#ffp location data
ffp_df= read.csv("./data/ffp_variable_means.csv")
city= ffp_df$city
ffp_df= apply(ffp_df[2:7],2, function(x)(x/mean(x)*100))
ffp_df= data.frame(ffp_df)
ffp_df=cbind(City=city, ffp_df)
columns= c("city","TOW", "UVR", "T", "P", "NaCl", "FOW")# "City")
colnames(ffp_df)= columns
mins= c(186,	135,	112,	177.2,	245,	153)
maxs=c(8.7,	62,	88,	8,	19,	18)
ffp_df2= ffp_df[2:7]
rownames(ffp_df2)= city
for(i in 1:nrow(ffp_df)){
city= ffp_df[i,1]
df=data.frame(mins=mins,
maxs=maxs,
actual= t(ffp_df2[i,]))
assign(paste(city, "df", sep="_"), df)
}
png(file = "./graphs/bangalore_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Bangalore_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/dammam_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Dammam_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/felling_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Felling_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/florida1_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(`Florida 1_df`)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/florida2_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(`Florida 2_df`)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/geoje_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Geoje_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/houston_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Houston_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/melbourne_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Melbourne_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/phoenix_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Phoenix_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/plymouth_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Plymouth_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/pudong_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Pudong_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/runco_grande_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(`Ruco Grande_df`)) , pfcol="darkorchid3", vlcex = 1.75 )
dev.off()
png(file = "./graphs/sanary_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Sanary_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/songjiang_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Songjiang_df)) , pfcol="darkorchid3", vlcex = 1.75 )
dev.off()
png(file = "./graphs/sunderland_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Sunderland_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/suzhou_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Suzhou_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/willawong_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Willawong_df)), pfcol="darkorchid3", vlcex = 1.75)
dev.off()
#lowest similarities cities data
lowest_df= read.csv("./data/lowest_sim_variable_means.csv")
lowest_city= lowest_df$city
lowest_df=apply(lowest_df[2:7],2, function(x) (x/mean(x)*100))
lowest_df=data.frame(lowest_df)
lowest_df=cbind(City=lowest_city, lowest_df)
colnames(lowest_df)= columns
mins_new= c(242.1,	132,	112,195.8,	294.1,	182.1)
maxs_new=c(2.2,57,86,2.5,5.5,6.3)
lowest_df2= lowest_df[2:7]
rownames(lowest_df2)= lowest_city
for(i in 1:nrow(lowest_df)){
city= lowest_df[i,1]
df=data.frame(mins=mins_new,
maxs=maxs_new,
actual= t(lowest_df2[i,]))
assign(paste(city, "df_new", sep="_"), df)
}
png(file = "./graphs/lima_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Lima_df_new)), pfcol="darkorange1", vlcex = 1.75)
dev.off()
png(file = "./graphs/kinshasa_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Kinshasa_df_new)), axistype=2, pfcol="darkorange1", vlcex = 1.75)
dev.off()
png(file = "./graphs/jakarta_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Jakarta_df_new)), pfcol="darkorange1", vlcex = 1.75)
dev.off()
View(Dammam_df_new)
radarchart(data.frame(t(Dammam_df)) , pfcol="darkorchid3", vlcex = 1.75)
png(file = "./graphs/bangalore_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Bangalore_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
png(file = "./graphs/dammam_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Dammam_df)) , pfcol="darkorchid3", vlcex = 1.75)
#only show 2 d.p.
options(digits=2)
#ffp location data
ffp_df= read.csv("./data/ffp_variable_means.csv")
city= ffp_df$city
ffp_df= apply(ffp_df[2:7],2, function(x)(x/mean(x)*100))
ffp_df= data.frame(ffp_df)
ffp_df=cbind(City=city, ffp_df)
columns= c("city","TOW", "UVR", "T", "P", "NaCl", "FOW")# "City")
colnames(ffp_df)= columns
mins= c(186,	135,	112,	177.2,	245,	153)
maxs=c(8.7,	62,	88,	8,	19,	18)
ffp_df2= ffp_df[2:7]
rownames(ffp_df2)= city
for(i in 1:nrow(ffp_df)){
city= ffp_df[i,1]
df=data.frame(mins=mins,
maxs=maxs,
actual= t(ffp_df2[i,]))
assign(paste(city, "df", sep="_"), df)
}
png(file = "./graphs/dammam_var_means.png")
par(mar =c(0,0,0,0))
radarchart(data.frame(t(Dammam_df)) , pfcol="darkorchid3", vlcex = 1.75)
dev.off()
radarchart(data.frame(t(Bangalore_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Felling_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(`Florida 1_df`)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(`Florida 2_df`)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Geoje_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Houston_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Melbourne_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Phoenix_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Plymouth_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Pudong_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(`Ruco Grande_df`)) , pfcol="darkorchid3", vlcex = 1.75 )
radarchart(data.frame(t(Sanary_df)) , pfcol="darkorchid3", vlcex = 1.75)
radarchart(data.frame(t(Songjiang_df)) , pfcol="darkorchid3", vlcex = 1.75 )
radarchart(data.frame(t(Sunderland_df)) , pfcol="darkorchid3", vlcex = 1.75)
View(ffp_df)
